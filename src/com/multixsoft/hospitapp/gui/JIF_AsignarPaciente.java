/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.multixsoft.hospitapp.gui;

import com.multixsoft.hospitapp.connector.ConectorPatientMapper;
import com.multixsoft.hospitapp.connector.ConectorServicio;
import com.multixsoft.hospitapp.entities.Doctor;
import com.multixsoft.hospitapp.entities.Patient;
import com.multixsoft.hospitapp.utilities.JPanes;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author manuelmartinez
 */
public class JIF_AsignarPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form AssignarPacienteJInternalFrame
     */
    public JIF_AsignarPaciente() {
        initComponents();
        this.setResizable(false);

        jButtonAsignar.setEnabled(false);
        
        llenarListas();
    }
    
    private void llenarListas(){
        //Lista de Doctores
        ConectorServicio servidor = ConectorServicio.getInstance();
        jListDoctores.addListSelectionListener(new ManejadorListas());
        List<Doctor> doctores = servidor.obtenerListaDoctor();
        DefaultListModel modelo = new DefaultListModel();
        for (Doctor c : doctores) {
            modelo.addElement(c);
        }
        jListDoctores.setModel(modelo);

        //Lista de pacientes
        List<Patient> pacientes = servidor.obtenerListaPatient();
        jListPacientes.addListSelectionListener(new ManejadorListas());
        DefaultListModel modelo2 = new DefaultListModel();
        for (Patient c : pacientes) {
            modelo2.addElement(c);
        }
        jListPacientes.setModel(modelo2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonVerPacientes = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePacientes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonAsignar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDoctores = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListPacientes = new javax.swing.JList();

        jButtonVerPacientes.setText("Ver Pacientes");

        jTablePacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NSS", "Nombre", "Apellido", "Domicilio", "Actividad", "Doctor"
            }
        ));
        jScrollPane2.setViewportView(jTablePacientes);

        setClosable(true);
        setIconifiable(true);
        setTitle("Asignación");

        jLabel1.setText("Doctores");

        jButtonAsignar.setText("Asignar");
        jButtonAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAsignarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jListDoctores);

        jLabel2.setText("Pacientes");

        jScrollPane3.setViewportView(jListPacientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAsignar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAsignar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAsignarActionPerformed
        ListModel modelo = jListDoctores.getModel();
        int indiceDo = jListDoctores.getSelectedIndex();

        ListModel modelo2 = jListPacientes.getModel();
        int indicePa = jListPacientes.getSelectedIndex();

        if (indiceDo != -1 && indicePa != -1) {
            Doctor doc = (Doctor) modelo.getElementAt(indiceDo);
            Patient pat = (Patient) modelo2.getElementAt(indicePa);
            ConectorPatientMapper pm = ConectorPatientMapper.getInstance();
            boolean mapPatient = pm.mapPatient(pat, doc);
            if (mapPatient) {
                JPanes.getInstance().msgPane( "Se asignó el paciente al doctor.");
                jListDoctores.setSelectedIndex(-1);
                jListPacientes.setSelectedIndex(-1);
                jButtonAsignar.setEnabled(false);
                llenarListas();
            } else {
                JPanes.getInstance().errorPane("Hubo un problema en asignar el paciente al doctor.");
            }
        }


    }//GEN-LAST:event_jButtonAsignarActionPerformed

    private class ManejadorListas implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (e.getValueIsAdjusting() == false) {
                int indiceDoc = jListDoctores.getSelectedIndex();
                int indicePac = jListPacientes.getSelectedIndex();
                
                if (indiceDoc == -1 || indicePac==-1) {
                    jButtonAsignar.setEnabled(false);
                } else {
                    jButtonAsignar.setEnabled(true);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAsignar;
    private javax.swing.JButton jButtonVerPacientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListDoctores;
    private javax.swing.JList jListPacientes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePacientes;
    // End of variables declaration//GEN-END:variables
}
