/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.multixsoft.hospitapp.gui;

import com.multixsoft.hospitapp.connector.ConectorPatientDataRecorder;
import com.multixsoft.hospitapp.connector.ConectorScheduleManager;
import com.multixsoft.hospitapp.connector.ConectorServicio;
import com.multixsoft.hospitapp.entities.Appointment;
import com.multixsoft.hospitapp.entities.Doctor;
import com.multixsoft.hospitapp.entities.Report;
import com.multixsoft.hospitapp.utilities.Date;
import com.multixsoft.hospitapp.utilities.FixedSizeNumberDocument;
import com.multixsoft.hospitapp.utilities.JPanes;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author manuelmartinez
 */
public class JIF_ABC_Cita extends javax.swing.JInternalFrame {

    private final Doctor doctor;
    private final JDesktopPane papa;

    /**
     * Creates new form JIF_ABC_Cita
     * @param doc El doctor, puede estar nullo y se llena de todas las citas
     * @param papa El jdesktoppane padre
     */
    public JIF_ABC_Cita(Doctor doc, JDesktopPane papa) {
        initComponents();

        doctor = doc;
        this.papa = papa;

        jTextFieldHora.setDocument(new FixedSizeNumberDocument(jTextFieldHora, 2));

        jButtonActualizar.setEnabled(false);
        jButtonEliminar.setEnabled(false);
        jButtonVerReporte.setEnabled(false);
        actualizarListCitas();
    }

    private void actualizarListCitas() {
        if (doctor == null) {
            //Lista de doctores
            ConectorServicio servidor = ConectorServicio.getInstance();
            jListCitas.addListSelectionListener(new ManejadorListaCitas());
            List<Appointment> citas = servidor.obtenerListaAppointment();
            DefaultListModel modelo = new DefaultListModel();
            for (Appointment c : citas) {
                modelo.addElement(c);
            }
            jListCitas.setModel(modelo);
        } else {
            //Lista de doctores de doctormanager
//        ConectorServicio servidor = ConectorServicio.getInstance();
            ConectorScheduleManager servidor = ConectorScheduleManager.getInstance();
            jListCitas.addListSelectionListener(new ManejadorListaCitas());
            List<Appointment> citas = servidor.getAllAppointmentsFor(doctor);
            DefaultListModel modelo = new DefaultListModel();
            for (Appointment c : citas) {
                modelo.addElement(c);
            }
            jListCitas.setModel(modelo);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButtonActualizar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonVerReporte = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCitas = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldIDCita = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jCheckBoxFinished = new javax.swing.JCheckBox();
        jCheckBoxCanceled = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldHora = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDoctor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPaciente = new javax.swing.JTextField();
        jLabelErrorMsg = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Citas");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButtonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/multixsoft/hospitapp/imagenes/ic_save.png"))); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.setFocusable(false);
        jButtonActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonActualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonActualizar);

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/multixsoft/hospitapp/imagenes/ic_delete.png"))); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.setFocusable(false);
        jButtonEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonEliminar);

        jButtonVerReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/multixsoft/hospitapp/imagenes/ic_flag_blue.png"))); // NOI18N
        jButtonVerReporte.setText("Ver Reporte");
        jButtonVerReporte.setFocusable(false);
        jButtonVerReporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonVerReporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonVerReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerReporteActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonVerReporte);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setViewportView(jListCitas);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la Cita"));

        jLabel1.setText("ID Cita:");

        jTextFieldIDCita.setEditable(false);

        jLabel2.setText("Fecha:");

        jCheckBoxFinished.setText("Finished");

        jCheckBoxCanceled.setText("Canceled");

        jLabel3.setText("Hora:");

        jLabel4.setText("Doctor:");

        jTextFieldDoctor.setEditable(false);

        jLabel5.setText("Paciente:");

        jTextFieldPaciente.setEditable(false);

        jLabelErrorMsg.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxFinished)
                            .addComponent(jCheckBoxCanceled))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooserCombo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldIDCita)
                            .addComponent(jTextFieldPaciente)
                            .addComponent(jTextFieldDoctor, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelErrorMsg)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldHora))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIDCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxCanceled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelErrorMsg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        DefaultListModel modelo = (DefaultListModel) jListCitas.getModel();
        int indice = jListCitas.getSelectedIndex();
        if (indice != -1) {
            Appointment cSel = (Appointment) modelo.getElementAt(indice);

            //codigo para actualizar la cita
            //codigo para notificar al paciente de la modificacion
            ConectorScheduleManager sm = ConectorScheduleManager.getInstance();
            boolean note = sm.notificateChange(cSel);
            if (note) {
                JPanes.getInstance().mailMsgPane("Se le notifico el cambio al paciente.");
            } else {
                JPanes.getInstance().errorPane("Hubo un error al notificar al paciente del cambio.");
            }

        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonVerReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerReporteActionPerformed
        DefaultListModel modelo = (DefaultListModel) jListCitas.getModel();
        int indice = jListCitas.getSelectedIndex();
        if (indice != -1) {
            Appointment cSel = (Appointment) modelo.getElementAt(indice);

            ConectorPatientDataRecorder pdr = ConectorPatientDataRecorder.getInstance();
            Report repo = pdr.getHistoryFromAppointment(cSel);

            if (repo != null) {
                System.err.println(repo.toString());
                JIF_Reportes rep = new JIF_Reportes(repo,cSel);
                papa.add(rep);
                rep.show();
                rep.moveToFront();
            } else {
                System.out.println("repo is null");
                JIF_Reportes rep = new JIF_Reportes(cSel);
                papa.add(rep);
                rep.show();
                rep.moveToFront();
            }

        }
    }//GEN-LAST:event_jButtonVerReporteActionPerformed

    private class ManejadorListaCitas implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (e.getValueIsAdjusting() == false) {
                int indice = jListCitas.getSelectedIndex();
                if (indice == -1) {
                    jButtonActualizar.setEnabled(false);
                    jButtonVerReporte.setEnabled(false);
//                    jButtonEliminar.setEnabled(false);
                } else {
                    jButtonActualizar.setEnabled(true);
                    jButtonVerReporte.setEnabled(true);
//                    jButtonEliminar.setEnabled(true);

                    ListModel modelo = jListCitas.getModel();
                    Appointment cSel = (Appointment) modelo.getElementAt(indice);

                    jTextFieldIDCita.setText(cSel.getIdAppointment() + "");
                    jTextFieldHora.setText(cSel.getTime());
                    jTextFieldDoctor.setText(cSel.getDoctorUsername().toString());
                    jTextFieldPaciente.setText(cSel.getPatientNss().toString());

                    System.err.println("isFinished=" + cSel.getIsFinished()
                            + " \nisCanceled=" + cSel.getIscanceled());

                    jCheckBoxFinished.setSelected(cSel.getIsFinished());
                    jCheckBoxCanceled.setSelected(cSel.getIscanceled());

                    Date date = cSel.getDate();
                    Calendar cal = Calendar.getInstance();
                    cal.set(date.getYear(), date.getMes(), date.getDia());
                    dateChooserCombo1.setSelectedDate(cal);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonVerReporte;
    private javax.swing.JCheckBox jCheckBoxCanceled;
    private javax.swing.JCheckBox jCheckBoxFinished;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelErrorMsg;
    private javax.swing.JList jListCitas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldDoctor;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldIDCita;
    private javax.swing.JTextField jTextFieldPaciente;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
